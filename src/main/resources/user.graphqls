type User{
    id:ID!
    name:String!
    email:String!
    phone:String!
    website:String!
    address:Address!
    company:Company!
}

type Address{
    id:ID!
    street:String!
    suite:String!
    city:String!
    zipcode:String!
    geo:Geo!
}

type Geo{
    id:ID!
    lat:String!
    lng:String!
}

type Company{
    id: ID!
    name: String
    catchPhrase: String
    bs: String
}

type Post {
    id: ID!
    title: String!
    body: String!
    user: User!
}

type Query {
    userCount:Long
    users:[User!]!
    usersPaginated(page:Int=0, count:Int=100, sortedBy:String="id"): [User!]!
    posts(withUser:Boolean=true):[Post!]!
}

input UserInput {
    id:ID!
    name:String!
    email:String!
}

type Mutation {
    update(id:ID!, name:String, email:String): Long
}